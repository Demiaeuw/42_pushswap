# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    map.txt                                            :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: acabarba <acabarba@student.42Perpignan.    +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2024/04/07 16:32:50 by acabarba          #+#    #+#              #
#    Updated: 2024/04/07 16:32:50 by acabarba         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

fait :

	- Gestion d'erreurs.

	- Gestion des Mallocs.
		-> Free **str.
		-> Free *str.
		-> Free struct.

	- Gestion d'arguments.
		-> Faire un join de tous les arguments.
		-> Faire un split de ce join.
		-> Check si bon format.
			- int ?
			- int_max/int_min ? 
			- pas de doublon ?
			- deja trié ?
		-> Ajout de ce tableau de tableau dans la structure.
	
	- Implementation des mouvements.

	- Algo de trie		nombre de coup pour 500 valeurs : 5500
						    100 valeurs : 700
						     50 valeurs : ????
						     10	valeurs : ????
						      5 valeurs : ????
						      3 valeurs : 3
		-> Push les trois valeurs dans B.
		-> commencer a trier pour qu'elles soient dans un ordre decroissant dans B.
		-> Tout re-push dans A.

a faire :

	- Clean le code
		-> Check les fonctions non autorisée.
		-> Check norme.
		-> Ajout de tout les "return".
		-> Virer les commentaires.



Divers : 

	- commande bash pour ajouter et lancer le visualizer
		make && git clone https://github.com/o-reo/push_swap_visualizer.git && cd push_swap_visualizer && mkdir build && cd build && cmake .. && make && ./bin/visualizer